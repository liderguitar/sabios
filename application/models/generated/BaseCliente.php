<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cliente', 'doctrine');

/**
 * BaseCliente
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $app_id
 * @property string $nombre_comercial
 * @property integer $tipo
 * @property string $telefono1
 * @property string $telefono2
 * @property integer $usuario_id
 * @property string $sms1
 * @property string $sms2
 * @property string $sms3
 * @property string $email1
 * @property string $email2
 * @property string $email3
 * @property string $empresa_de_preferencia
 * @property integer $asegurado
 * @property string $direccion_de_envio
 * @property string $enviar_a_nombre_de
 * @property string $razon_social
 * @property enum $tipo_contribucion
 * @property string $cuit
 * @property integer $provincia_id
 * @property string $localidad
 * @property enum $muestra_precio
 * @property enum $aplica_iva
 * @property enum $habilita_acceso_pedidos
 * @property enum $borrado
 * @property integer $estado_id
 * @property timestamp $fecha_alta
 * @property string $direccion_facturacion
 * @property string $observaciones
 * @property integer $viajante_id
 * @property ClienteTipo $ClienteTipo
 * @property Provincia $Provincia
 * @property ClienteEstado $ClienteEstado
 * @property Doctrine_Collection $ComentarioPorCliente
 * @property Doctrine_Collection $PersonalPorCliente
 * @property Doctrine_Collection $SucursalPorCliente
 * @property Doctrine_Collection $Venta
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCliente extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('cliente');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('app_id', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('nombre_comercial', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('tipo', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('telefono1', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('telefono2', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('sms1', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('sms2', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('sms3', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('email1', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('email2', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('email3', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('empresa_de_preferencia', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('asegurado', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('direccion_de_envio', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('enviar_a_nombre_de', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('razon_social', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('tipo_contribucion', 'enum', 23, array(
             'type' => 'enum',
             'length' => 23,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Consumidor Final',
              1 => 'Excento',
              2 => 'No Responsable',
              3 => 'Responsable Inscripto',
              4 => 'Responsable Monotributo',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('cuit', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('provincia_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('localidad', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('muestra_precio', 'enum', 2, array(
             'type' => 'enum',
             'length' => 2,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'SI',
              1 => 'NO',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('aplica_iva', 'enum', 2, array(
             'type' => 'enum',
             'length' => 2,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'SI',
              1 => 'NO',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('habilita_acceso_pedidos', 'enum', 2, array(
             'type' => 'enum',
             'length' => 2,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'SI',
              1 => 'NO',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('borrado', 'enum', 1, array(
             'type' => 'enum',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Y',
              1 => 'N',
             ),
             'primary' => false,
             'default' => 'N',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('estado_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('fecha_alta', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('direccion_facturacion', 'string', 256, array(
             'type' => 'string',
             'length' => 256,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('observaciones', 'string', 2048, array(
             'type' => 'string',
             'length' => 2048,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('viajante_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ClienteTipo', array(
             'local' => 'tipo',
             'foreign' => 'id'));

        $this->hasOne('Provincia', array(
             'local' => 'provincia_id',
             'foreign' => 'id'));

        $this->hasOne('ClienteEstado', array(
             'local' => 'estado_id',
             'foreign' => 'id'));

        $this->hasMany('ComentarioPorCliente', array(
             'local' => 'id',
             'foreign' => 'id_cliente'));

        $this->hasMany('PersonalPorCliente', array(
             'local' => 'id',
             'foreign' => 'id_cliente'));

        $this->hasMany('SucursalPorCliente', array(
             'local' => 'id',
             'foreign' => 'id_cliente'));

        $this->hasMany('Venta', array(
             'local' => 'id',
             'foreign' => 'clienteId'));
    }
}